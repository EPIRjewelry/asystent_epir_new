name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual runs from the Actions UI
  workflow_dispatch: {}

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: worker
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Use Node.js 20
        uses: actions/setup-node@v5
        with:
          node-version: '20'

      # Yarn v1 stores dependencies in node_modules (not .yarn/cache like v2+)
      # We cache node_modules directly for faster builds
      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Type check
        run: npx tsc --noEmit

  # Optional: deploy Worker (requires Cloudflare API token secret)
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js 20
        uses: actions/setup-node@v5
        with:
          node-version: '20'
      - name: Build frontend (if package.json present)
        run: |
          if [ -f extensions/asystent-klienta/package.json ]; then
            cd extensions/asystent-klienta
            npm ci
            if npm run | grep -q "build"; then
              npm run build
            fi
          else
            echo "No frontend package.json, skipping build"
          fi

  deploy-worker:
    runs-on: ubuntu-latest
    # Only deploy when workflow is manually dispatched on main
    if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch'
    needs: [test-backend, build-frontend]
    defaults:
      run:
        working-directory: worker
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js 20
        uses: actions/setup-node@v5
        with:
          node-version: '20'

      # Yarn v1 stores dependencies in node_modules (not .yarn/cache like v2+)
      # We cache node_modules directly for faster builds
      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: npm ci
      - name: Deploy to Cloudflare Workers
        run: npx wrangler deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
