name: Deploy

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: worker
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: worker/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Type check
        run: npx tsc --noEmit

  deploy-worker:
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: worker
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: worker/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Deploy to Cloudflare Workers
        run: |
          if [ "${{ github.event.inputs.environment }}" == "staging" ]; then
            npx wrangler deploy --env staging
          else
            npx wrangler deploy
          fi
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Deploy Summary
        run: |
          echo "‚úÖ Worker deployed successfully!"
          echo "üì¶ Tag: ${{ github.ref_name }}"
          echo "üåç Environment: ${{ github.event.inputs.environment || 'production' }}"
          if [ "${{ github.event.inputs.environment }}" == "staging" ]; then
            echo "üîó URL: https://epir-art-jewellery-worker-staging.krzysztofdzugaj.workers.dev"
          else
            echo "üîó URL: https://epir-art-jewellery-worker.krzysztofdzugaj.workers.dev"
          fi

  deploy-shopify:
    runs-on: ubuntu-latest
    needs: test
    # Only deploy Shopify extension on manual trigger or when explicitly enabled
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Shopify CLI
        run: npm install -g @shopify/cli @shopify/app

      - name: Deploy to Shopify
        run: shopify app deploy --force
        env:
          SHOPIFY_CLI_PARTNERS_TOKEN: ${{ secrets.SHOPIFY_CLI_PARTNERS_TOKEN }}

      - name: Deploy Summary
        run: |
          echo "‚úÖ Shopify Theme App Extension deployed!"
          echo "üì¶ Version: ${{ github.ref_name }}"

  notify:
    runs-on: ubuntu-latest
    needs: [deploy-worker, deploy-shopify]
    if: always()
    steps:
      - name: Deployment Status
        run: |
          echo "üöÄ Deployment pipeline completed"
          echo "Worker: ${{ needs.deploy-worker.result }}"
          echo "Shopify: ${{ needs.deploy-shopify.result }}"
