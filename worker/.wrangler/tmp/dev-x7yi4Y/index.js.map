{
  "version": 3,
  "sources": ["../../../src/auth.ts", "../../../src/rag.ts", "../../../src/groq.ts", "../../../src/mcp_server.ts", "../../../src/index.ts", "../../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-mRhDL5/middleware-insertion-facade.js", "../../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-mRhDL5/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\user\\epir_asystent\\EPIR-ART-JEWELLERY\\WORKER\\.wrangler\\tmp\\dev-x7yi4Y",
  "sourcesContent": ["/**\r\n * worker/src/auth.ts\r\n *\r\n * Stabilna weryfikacja HMAC dla Shopify App Proxy zgodnie z oficjaln\u0105 dokumentacj\u0105.\r\n */\r\n\r\nimport type { Env } from './index';\r\n\r\nexport async function verifyAppProxyHmac(request: Request, envOrSecret: Env | string): Promise<boolean> {\r\n  const secret = typeof envOrSecret === 'string' ? envOrSecret : envOrSecret.SHOPIFY_APP_SECRET;\r\n  const url = new URL(request.url);\r\n  const params = new URLSearchParams(url.search);\r\n  const receivedSignature = params.get('signature');\r\n  if (!receivedSignature) return false;\r\n\r\n  // Zbierz params jako Map (obs\u0142uguje multi-values)\r\n  const paramMap: Map<string, string[]> = new Map();\r\n  for (const [key, value] of params.entries()) {\r\n    if (key !== 'signature') {\r\n      if (!paramMap.has(key)) paramMap.set(key, []);\r\n      paramMap.get(key)!.push(value);\r\n    }\r\n  }\r\n\r\n  // Kanonikalizacja\r\n  const sortedPairs: string[] = [];\r\n  const sortedKeys = Array.from(paramMap.keys()).sort();\r\n  for (const key of sortedKeys) {\r\n    const values = paramMap.get(key)!;\r\n    const joinedValues = values.join(',');\r\n    sortedPairs.push(`${key}=${joinedValues}`);\r\n  }\r\n  const canonicalized = sortedPairs.join('');\r\n\r\n  // Log dla debugu (usu\u0144 w prod)\r\n  console.log('Canonicalized string:', canonicalized);\r\n  console.log('Received signature:', receivedSignature);\r\n\r\n  // HMAC-SHA256 z secret\r\n  const encoder = new TextEncoder();\r\n  const key = await crypto.subtle.importKey(\r\n    'raw',\r\n    encoder.encode(secret),\r\n    { name: 'HMAC', hash: 'SHA-256' },\r\n    false,\r\n    ['sign']\r\n  );\r\n  const signatureBytes = await crypto.subtle.sign('HMAC', key, encoder.encode(canonicalized));\r\n  const calculatedSignature = Array.from(new Uint8Array(signatureBytes))\r\n    .map(b => b.toString(16).padStart(2, '0'))\r\n    .join('');\r\n\r\n  // Secure compare\r\n  let receivedBytes: Uint8Array;\r\n  try {\r\n    receivedBytes = hexToBytes(receivedSignature);\r\n  } catch {\r\n    return false;\r\n  }\r\n  return timingSafeEqual(signatureBytes, receivedBytes);\r\n}\r\n\r\n/**\r\n * Por\u00F3wnanie w sta\u0142ym czasie dla ArrayBuffer lub Uint8Array.\r\n */\r\nfunction timingSafeEqual(a: ArrayBuffer | Uint8Array, b: ArrayBuffer | Uint8Array): boolean {\r\n  const aBytes = a instanceof Uint8Array ? a : new Uint8Array(a);\r\n  const bBytes = b instanceof Uint8Array ? b : new Uint8Array(b);\r\n  if (aBytes.length !== bBytes.length) return false;\r\n  let result = 0;\r\n  for (let i = 0; i < aBytes.length; i++) {\r\n    result |= aBytes[i] ^ bBytes[i];\r\n  }\r\n  return result === 0;\r\n}\r\n\r\n/**\r\n * Konwertuj hex string na Uint8Array.\r\n */\r\nfunction hexToBytes(hex: string): Uint8Array {\r\n  const clean = hex.replace(/[^0-9a-f]/gi, '');\r\n  if (clean.length % 2 !== 0) throw new Error('Invalid hex length');\r\n  const out = new Uint8Array(clean.length / 2);\r\n  for (let i = 0; i < out.length; i++) {\r\n    out[i] = parseInt(clean.substr(i * 2, 2), 16);\r\n  }\r\n  return out;\r\n}\r\n\r\nexport default { verifyAppProxyHmac };\r\n", "/**\r\n * worker/src/rag.ts\r\n *\r\n * Funkcje RAG (Retrieval-Augmented Generation) u\u017Cywane przez worker/src/index.ts:\r\n * - searchShopPoliciesAndFaqs: wyszukuje w lokalnej bazie (Vectorize) lub przez MCP\r\n * - searchShopPoliciesAndFaqsWithMCP: wymusza u\u017Cycie MCP -> zwraca wynik z narz\u0119dzi sklepu\r\n * - searchProductCatalogWithMCP: prosty wrapper do wyszukiwania katalogu produkt\u00F3w przez MCP\r\n * - formatRagContextForPrompt: buduje string z wynik\u00F3w RAG do wstrzykni\u0119cia w prompt LLM\r\n *\r\n * ZASADA: \u017BADNYCH sekret\u00F3w w kodzie. Wszystkie klucze / tokeny pochodz\u0105 z env (wrangler secrets / vars).\r\n */\r\n\r\nexport type VectorizeIndex = {\r\n  // Abstrakcja: implementacja zale\u017Cy od bindingu Vectorize w Cloudflare (typu API).\r\n  // Tutaj minimalny typ dla zapyta\u0144 wektorowych.\r\n  query: (q: string, opts?: { topK?: number }) => Promise<Array<{ id: string; score: number; payload?: any }>>;\r\n};\r\n\r\nexport interface RagResultItem {\r\n  id: string;\r\n  title?: string;\r\n  text?: string; // Dodane dla kompatybilno\u015Bci z testami\r\n  snippet?: string;\r\n  source?: string;\r\n  score?: number;\r\n  metadata?: any; // Dodane dla kompatybilno\u015Bci z testami\r\n  full?: any;\r\n}\r\n\r\nexport interface RagSearchResult {\r\n  query?: string; // Dodane dla kompatybilno\u015Bci z testami\r\n  results: RagResultItem[];\r\n}\r\n\r\n/**\r\n * Wywo\u0142aj MCP JSON-RPC tools/call na endpoint /mcp/tools/call (dev) lub /apps/assistant/mcp (App Proxy),\r\n * automatycznie wybiera \u015Bcie\u017Ck\u0119 zale\u017Cnie od isAppProxy param w query (tutaj przyjmujemy request kierowany do Workera).\r\n *\r\n * NOTE: Nie obs\u0142ugujemy tutaj bezpo\u015Brednio HMAC - endpoint /apps/assistant/mcp powinien by\u0107 wywo\u0142ywany przez storefront (App Proxy)\r\n * i Worker ju\u017C w index.ts weryfikuje HMAC. Tutaj wykonujemy fetch do w\u0142asnego endpointu MCP do test\u00F3w/wywo\u0142a\u0144 wewn\u0119trznych.\r\n */\r\nasync function callMcpTool(requestOrigin: string, toolName: string, args: any): Promise<any> {\r\n  // requestOrigin to przyk\u0142ad: 'https://your-worker-domain' - placeholder, ale w Workerze mo\u017Cesz wywo\u0142a\u0107 bezpo\u015Brednio \u015Bcie\u017Ck\u0119 wzgl\u0119dn\u0105\r\n  try {\r\n    const url = `${requestOrigin}/mcp/tools/call`;\r\n    const res = await fetch(url, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        jsonrpc: '2.0',\r\n        method: 'tools/call',\r\n        params: { name: toolName, arguments: args },\r\n        id: Date.now()\r\n      })\r\n    });\r\n    if (!res.ok) {\r\n      const txt = await res.text().catch(() => '<no body>');\r\n      throw new Error(`MCP tool ${toolName} error ${res.status}: ${txt}`);\r\n    }\r\n    const j = await res.json().catch(() => null);\r\n    return (j as any)?.result ?? null;\r\n  } catch (err) {\r\n    console.error('callMcpTool error:', err);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * searchProductCatalogWithMCP\r\n * - u\u017Cywa MCP tool 'search_products' do zwr\u00F3cenia listy produkt\u00F3w\r\n * - env: { SHOP_DOMAIN } jest wykorzystywany przy budowie zapytania do MCP je\u015Bli trzeba (tu przyjmujemy, \u017Ce MCP jest ju\u017C zmapowany)\r\n */\r\nexport async function searchProductCatalogWithMCP(\r\n  query: string,\r\n  shopDomain: string | undefined,\r\n  shopAdminToken?: string,\r\n  storefrontToken?: string\r\n): Promise<string | undefined> {\r\n  // Zwracamy string context (np. lista produkt\u00F3w w formie tekstowej) lub undefined\r\n  try {\r\n    const origin = (typeof shopDomain === 'string' && shopDomain.length) ? `https://${shopDomain}` : '';\r\n    // Wywo\u0142ujemy MCP endpoint (zak\u0142adamy, \u017Ce Worker posiada /mcp/tools/call)\r\n    const result = await callMcpTool(origin || '', 'search_products', { query });\r\n    if (!result) return undefined;\r\n    const products = Array.isArray(result) ? result : (result.products ?? []);\r\n    const items = (products as any[]).slice(0, 5).map((p) => {\r\n      const title = p.title || p.name || p.handle || 'produkt';\r\n      const url = p.onlineStoreUrl || p.url || p.handle ? `https://${shopDomain}/products/${p.handle}` : undefined;\r\n      return `- ${title}${url ? ` (${url})` : ''}`;\r\n    });\r\n    return items.length ? `Znalezione produkty:\\n${items.join('\\n')}` : undefined;\r\n  } catch (e) {\r\n    console.error('searchProductCatalogWithMCP error:', e);\r\n    return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * searchShopPoliciesAndFaqsWithMCP\r\n * - Preferuje u\u017Cycie MCP (np. sklepowy MCP index) do wyszukiwania FAQ/policies.\r\n * - Zwraca RagSearchResult z list\u0105 element\u00F3w (id, snippet, source)\r\n */\r\nexport async function searchShopPoliciesAndFaqsWithMCP(\r\n  query: string,\r\n  shopDomain: string,\r\n  vectorIndex?: VectorizeIndex,\r\n  aiBinding?: any,\r\n  topK: number = 3\r\n): Promise<RagSearchResult> {\r\n  try {\r\n    // Najpierw spr\u00F3buj MCP catalog (je\u015Bli dost\u0119pne)\r\n    const origin = `https://${shopDomain}`;\r\n    const mcpRes = await callMcpTool(origin, 'search_shop_policies_and_faqs', { query, topK });\r\n    if (mcpRes && Array.isArray(mcpRes.faqs) && mcpRes.faqs.length > 0) {\r\n      const results: RagResultItem[] = mcpRes.faqs.slice(0, topK).map((f: any, i: number) => ({\r\n        id: f.id ?? `mcp-faq-${i}`,\r\n        title: f.question ?? f.title ?? `FAQ ${i + 1}`,\r\n        text: (f.answer || '').slice(0, 500), // Dodane dla kompatybilno\u015Bci\r\n        snippet: (f.answer || '').slice(0, 500),\r\n        source: f.source || 'mcp',\r\n        score: f.score ?? undefined,\r\n        full: f\r\n      }));\r\n      return { results };\r\n    }\r\n\r\n    // Fallback: je\u015Bli mamy Vectorize binding -> zapytanie wektorowe\r\n    if (vectorIndex) {\r\n      try {\r\n        const vres = await vectorIndex.query(query, { topK });\r\n        const results: RagResultItem[] = vres.map((r) => ({\r\n          id: r.id,\r\n          title: r.payload?.title ?? r.id,\r\n          text: (r.payload?.text ?? '').slice(0, 500), // Dodane dla kompatybilno\u015Bci\r\n          snippet: (r.payload?.text ?? '').slice(0, 500),\r\n          source: r.payload?.source ?? 'vectorize',\r\n          score: r.score,\r\n          metadata: r.payload?.metadata, // Dodane dla kompatybilno\u015Bci\r\n          full: r.payload\r\n        }));\r\n        return { results };\r\n      } catch (ve) {\r\n        console.warn('Vectorize query failed, falling back', ve);\r\n      }\r\n    }\r\n\r\n    // Ostateczny fallback: pusta lista\r\n    return { results: [] };\r\n  } catch (err) {\r\n    console.error('searchShopPoliciesAndFaqsWithMCP error:', err);\r\n    return { results: [] };\r\n  }\r\n}\r\n\r\n/**\r\n * searchShopPoliciesAndFaqs - wygodna funkcja wywo\u0142uj\u0105ca wy\u017Cej implementacj\u0119,\r\n * ale dopuszcza wywo\u0142anie bez MCP (tylko vectorIndex)\r\n */\r\nexport async function searchShopPoliciesAndFaqs(\r\n  query: string,\r\n  vectorIndex?: VectorizeIndex,\r\n  aiBinding?: any,\r\n  topK: number = 3\r\n): Promise<RagSearchResult> {\r\n  try {\r\n    if (vectorIndex) {\r\n      const result = await searchShopPoliciesAndFaqsWithMCP(query, '', vectorIndex, aiBinding, topK);\r\n      return { query, results: result.results };\r\n    }\r\n    return { query, results: [] };\r\n  } catch (err) {\r\n    console.error('searchShopPoliciesAndFaqs error:', err);\r\n    return { query, results: [] };\r\n  }\r\n}\r\n\r\n/**\r\n * formatRagContextForPrompt\r\n * - Przyjmuje RagSearchResult i buduje kr\u00F3tki kontekst do wstrzykni\u0119cia do promptu LLM\r\n */\r\nexport function formatRagContextForPrompt(rag: RagSearchResult): string {\r\n  if (!rag || !Array.isArray(rag.results) || rag.results.length === 0) return '';\r\n\r\n  let output = '';\r\n  if (rag.query) {\r\n    output += `Context (retrieved documents for query: \"${rag.query}\")\\n\\n`;\r\n  }\r\n\r\n  const parts = rag.results.map((r, index) => {\r\n    const docNum = index + 1;\r\n    const title = r.title ? `${r.title}: ` : '';\r\n    const text = r.text || r.snippet || '';\r\n    const score = r.score ? `${(r.score * 100).toFixed(1)}%` : '';\r\n    const metadata = r.metadata ? `\\n${JSON.stringify(r.metadata)}` : '';\r\n    return `[Doc ${docNum}] ${score ? `(${score}) ` : ''}${title}${text}${metadata}`;\r\n  });\r\n\r\n  output += parts.join('\\n\\n');\r\n\r\n  if (rag.results.length > 0) {\r\n    output += '\\n\\nOdpowiedz u\u017Cywaj\u0105c powy\u017Cszego kontekstu. Je\u015Bli brak wystarczaj\u0105cych informacji, powiedz to wprost.';\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\n/**\r\n * hasHighConfidenceResults\r\n * - Sprawdza czy wyniki RAG maj\u0105 wystarczaj\u0105co wysok\u0105 pewno\u015B\u0107 (domy\u015Blnie >= 0.7)\r\n */\r\nexport function hasHighConfidenceResults(rag: RagSearchResult, threshold: number = 0.7): boolean {\r\n  if (!rag || !Array.isArray(rag.results) || rag.results.length === 0) return false;\r\n  return rag.results.some(r => (r.score ?? 0) >= threshold);\r\n}\r\n", "/**\r\n * worker/src/groq.ts\r\n *\r\n * Integracja z Groq (OpenAI-compatible endpoint).\r\n * - streamGroqResponse: wykonuje request stream=true i zwraca ReadableStream<string> z tekstowymi chunkami\r\n * - getGroqResponse: non-streaming request, zwraca pe\u0142n\u0105 odpowied\u017A tekstow\u0105\r\n * - buildGroqMessages: buduje tablic\u0119 wiadomo\u015Bci (system,user,assistant) z opcjonalnym RAG context\r\n *\r\n * Uwaga: NIE wrzucaj sekret\u00F3w do kodu. Przeka\u017C GROQ API key przez Cloudflare Secrets (wrangler secret put GROQ_API_KEY)\r\n */\r\n\r\nexport type GroqMessage = { role: 'system' | 'user' | 'assistant'; content: string };\r\n\r\nexport const LUXURY_SYSTEM_PROMPT = `Jeste\u015B eleganckim, wyrafinowanym doradc\u0105 marki EPIR-ART-JEWELLERY. Twoim zadaniem jest udziela\u0107 precyzyjnych, rzeczowych rekomendacji produktowych i odpowiedzi obs\u0142ugi klienta, zawsze w tonie luksusowym, kulturalnym i zwi\u0119z\u0142ym.\r\n\r\nZASADY:\r\n- U\u017Cywaj tylko materia\u0142\u00F3w dostarczonych przez system retrieval (retrieved_docs). Nie halucynuj.\r\n- Cytuj \u017Ar\u00F3d\u0142o przy istotnych faktach: [doc_id] lub kr\u00F3tki fragment.\r\n- Je\u015Bli brak wystarczaj\u0105cych informacji \u2014 powiedz kr\u00F3tko \"Nie mam wystarczaj\u0105cych informacji\" i zaproponuj 2 dalsze kroki (np. poprosi\u0107 o szczeg\u00F3\u0142y, sprawdzi\u0107 stan magazynu).\r\n- Dla rekomendacji produkt\u00F3w: podawaj kr\u00F3tkie uzasadnienie i (je\u015Bli dost\u0119pne) nazw\u0119 produktu, cen\u0119.\r\n- Maksymalna d\u0142ugo\u015B\u0107 odpowiedzi: 2-4 zdania, opcjonalnie 1-2 punkty z opcjami.\r\n- Ton: profesjonalny, ciep\u0142y, luksusowy - jakby\u015B by\u0142 osobistym doradc\u0105 w butiku jubilerskim.\r\n\r\nJ\u0118ZYK: Zawsze odpowiadaj po polsku.`;\r\n\r\n/**\r\n * Parsuje stream SSE z Groq (tekst EventSource style), wyci\u0105ga pola `data: {...}` i enqueuje delta/content.\r\n * Zwraca ReadableStream<string> emituj\u0105cy kolejne fragmenty tekstu w kolejno\u015Bci otrzymanej od Groq.\r\n */\r\nexport async function streamGroqResponse(\r\n  messages: GroqMessage[],\r\n  apiKey: string,\r\n  model: string = 'llama-3.3-70b-versatile'\r\n): Promise<ReadableStream<string>> {\r\n  if (!apiKey) throw new Error('Missing GROQ API key');\r\n\r\n  const res = await fetch('https://api.groq.com/openai/v1/chat/completions', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${apiKey}`\r\n    },\r\n    body: JSON.stringify({\r\n      model,\r\n      messages,\r\n      stream: true,\r\n      temperature: 0.7,\r\n      max_tokens: 1024,\r\n      top_p: 0.9\r\n    })\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const txt = await res.text().catch(() => '<no body>');\r\n    throw new Error(`Groq API error (${res.status}): ${txt}`);\r\n  }\r\n\r\n  if (!res.body) throw new Error('Groq response has no body');\r\n\r\n  // Transform SSE text -> enqueue only meaningful content chunks\r\n  const textStream = res.body\r\n    .pipeThrough(new TextDecoderStream())\r\n    .pipeThrough(\r\n      new TransformStream<string, string>({\r\n        transform(chunk, controller) {\r\n          // chunk mo\u017Ce zawiera\u0107 wiele linii SSE; przetwarzamy linia po linii\r\n          const lines = chunk.split(/\\r?\\n/);\r\n          for (const line of lines) {\r\n            const trimmed = line.trim();\r\n            if (!trimmed) continue;\r\n            // standardowy format Groq SSE: \"data: { ... }\" lub \"data: [DONE]\"\r\n            if (trimmed === 'data: [DONE]' || trimmed === '[DONE]') {\r\n              // ignoruj lub zako\u0144cz\r\n              continue;\r\n            }\r\n            const prefix = trimmed.startsWith('data:') ? trimmed.slice(5).trim() : trimmed;\r\n            try {\r\n              const parsed = JSON.parse(prefix);\r\n              // wybieramy delta content (OpenAI-like structure)\r\n              const content = parsed?.choices?.[0]?.delta?.content;\r\n              const messageContent = parsed?.choices?.[0]?.message?.content; // alternate shape\r\n              if (typeof content === 'string') controller.enqueue(content);\r\n              else if (typeof messageContent === 'string') controller.enqueue(messageContent);\r\n            } catch (e) {\r\n              // nieparsowalny fragment - push surowy tekst (bezpiecze\u0144stwo)\r\n              // tylko je\u015Bli wygl\u0105da na warto\u015Bciowy\r\n              if (prefix && prefix.length < 1000) controller.enqueue(prefix);\r\n            }\r\n          }\r\n        }\r\n      })\r\n    );\r\n\r\n  return textStream;\r\n}\r\n\r\n/**\r\n * Non-streaming Groq call - zwraca pe\u0142n\u0105 odpowied\u017A tekstow\u0105 (pierwszej choice.message.content).\r\n */\r\nexport async function getGroqResponse(\r\n  messages: GroqMessage[],\r\n  apiKey: string,\r\n  model: string = 'llama-3.3-70b-versatile'\r\n): Promise<string> {\r\n  if (!apiKey) throw new Error('Missing GROQ API key');\r\n\r\n  const res = await fetch('https://api.groq.com/openai/v1/chat/completions', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${apiKey}`\r\n    },\r\n    body: JSON.stringify({\r\n      model,\r\n      messages,\r\n      stream: false,\r\n      temperature: 0.7,\r\n      max_tokens: 1024,\r\n      top_p: 0.9\r\n    })\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const txt = await res.text().catch(() => '<no body>');\r\n    throw new Error(`Groq API error (${res.status}): ${txt}`);\r\n  }\r\n\r\n  const json = await res.json().catch(() => null) as any;\r\n  const content = json?.choices?.[0]?.message?.content ?? json?.choices?.[0]?.text;\r\n  if (!content) throw new Error('Groq API returned empty response');\r\n  return String(content);\r\n}\r\n\r\n/**\r\n * Buduje tablic\u0119 wiadomo\u015Bci (system + history + user). Opcjonalnie wstrzykuje ragContext przed wiadomo\u015Bci\u0105 user.\r\n */\r\nexport function buildGroqMessages(\r\n  history: Array<{ role: 'user' | 'assistant'; content: string }>,\r\n  userMessage: string,\r\n  ragContext?: string\r\n): GroqMessage[] {\r\n  const systemContent = ragContext && ragContext.length\r\n    ? `${LUXURY_SYSTEM_PROMPT}\\n\\nKontekst:\\n${ragContext}`\r\n    : LUXURY_SYSTEM_PROMPT;\r\n\r\n  const messages: GroqMessage[] = [\r\n    { role: 'system', content: systemContent },\r\n    ...history.slice(-10).map((h) => ({ role: h.role, content: h.content })),\r\n    { role: 'user', content: userMessage }\r\n  ];\r\n\r\n  return messages;\r\n}\r\n", "// MCP Server (JSON-RPC 2.0) dla narz\u0119dzi Shopify w trybie single-store.\r\n// Sekrety (SHOPIFY_APP_SECRET, SHOPIFY_ADMIN_TOKEN) pochodz\u0105 TYLKO z Cloudflare Secrets.\r\n// \u017BADNYCH sekret\u00F3w w wrangler.toml [vars] ani w kodzie.\r\n// Endpointy:\r\n// - POST /mcp/tools/call (dev/test bez HMAC)\r\n// - POST /apps/assistant/mcp (App Proxy + HMAC)\r\n// Narz\u0119dzia: get_product, search_products (Shopify Admin GraphQL 2024-07)\r\n\r\nimport { verifyAppProxyHmac } from './auth';\r\n\r\ntype JsonRpcId = string | number | null;\r\n\r\ninterface JsonRpcRequest {\r\n  jsonrpc: '2.0';\r\n  method: string;\r\n  params?: any;\r\n  id?: JsonRpcId;\r\n}\r\n\r\ninterface JsonRpcSuccess {\r\n  jsonrpc: '2.0';\r\n  result: any;\r\n  id: JsonRpcId;\r\n}\r\n\r\ninterface JsonRpcError {\r\n  jsonrpc: '2.0';\r\n  error: { code: number; message: string; data?: any };\r\n  id: JsonRpcId;\r\n}\r\n\r\nexport interface Env {\r\n  SHOP_DOMAIN?: string;              // niesekretne: ustaw w wrangler.toml [vars]\r\n  SHOPIFY_ADMIN_TOKEN?: string;      // SEKRET: wrangler secret put SHOPIFY_ADMIN_TOKEN\r\n  SHOPIFY_APP_SECRET?: string;       // SEKRET: wrangler secret put SHOPIFY_APP_SECRET\r\n}\r\n\r\nfunction json(headers: HeadersInit = {}) {\r\n  return { 'Content-Type': 'application/json', ...headers };\r\n}\r\n\r\nfunction rpcResult(id: JsonRpcId, result: any): Response {\r\n  const body: JsonRpcSuccess = { jsonrpc: '2.0', result, id: id ?? null };\r\n  return new Response(JSON.stringify(body), { status: 200, headers: json() });\r\n}\r\n\r\nfunction rpcError(id: JsonRpcId, code: number, message: string, data?: any): Response {\r\n  const body: JsonRpcError = { jsonrpc: '2.0', error: { code, message, data }, id: id ?? null };\r\n  return new Response(JSON.stringify(body), { status: 200, headers: json() });\r\n}\r\n\r\nasync function adminGraphql<T = any>(env: Env, query: string, variables?: Record<string, any>): Promise<T> {\r\n  if (!env.SHOP_DOMAIN) throw new Error('Brak SHOP_DOMAIN (ustaw w wrangler.toml [vars])');\r\n  if (!env.SHOPIFY_ADMIN_TOKEN) throw new Error('Brak SHOPIFY_ADMIN_TOKEN (ustaw przez wrangler secret put)');\r\n\r\n  const endpoint = `https://${env.SHOP_DOMAIN}/admin/api/2024-07/graphql.json`;\r\n  const res = await fetch(endpoint, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'X-Shopify-Access-Token': env.SHOPIFY_ADMIN_TOKEN\r\n    },\r\n    body: JSON.stringify({ query, variables })\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const txt = await res.text().catch(() => '<no body>');\r\n    throw new Error(`Shopify GraphQL ${res.status}: ${txt}`);\r\n  }\r\n\r\n  const data = await res.json().catch(() => ({}));\r\n  if (data?.errors) {\r\n    throw new Error(`Shopify GraphQL errors: ${JSON.stringify(data.errors)}`);\r\n  }\r\n  return data.data as T;\r\n}\r\n\r\nasync function toolGetProduct(env: Env, args: any) {\r\n  const id = String(args?.id || '').trim();\r\n  if (!id) throw new Error('get_product: Missing \"id\"');\r\n  const data = await adminGraphql<{ product: any }>(\r\n    env,\r\n    `query Product($id: ID!) {\r\n      product(id: $id) {\r\n        id title handle descriptionHtml onlineStoreUrl vendor tags\r\n        variants(first: 10) { edges { node { id title price } } }\r\n        featuredImage { url altText }\r\n      }\r\n    }`,\r\n    { id }\r\n  );\r\n  return data.product;\r\n}\r\n\r\nasync function toolSearchProducts(env: Env, args: any) {\r\n  const query = String(args?.query || '').trim();\r\n  if (!query) throw new Error('search_products: Missing \"query\"');\r\n  const data = await adminGraphql<{ products: { edges: { node: any }[] } }>(\r\n    env,\r\n    `query Search($query: String!) {\r\n      products(first: 10, query: $query) {\r\n        edges { node { id title handle vendor onlineStoreUrl featuredImage { url altText } } }\r\n      }\r\n    }`,\r\n    { query }\r\n  );\r\n  return data.products?.edges?.map(e => e.node) ?? [];\r\n}\r\n\r\nasync function handleToolsCall(env: Env, req: Request): Promise<Response> {\r\n  let rpc: JsonRpcRequest | null = null;\r\n  try {\r\n    rpc = (await req.json()) as JsonRpcRequest;\r\n  } catch {\r\n    return rpcError(null, -32700, 'Parse error');\r\n  }\r\n\r\n  if (!rpc || rpc.jsonrpc !== '2.0' || typeof rpc.method !== 'string') {\r\n    return rpcError(rpc?.id ?? null, -32600, 'Invalid Request');\r\n  }\r\n\r\n  if (rpc.method !== 'tools/call') {\r\n    return rpcError(rpc.id ?? null, -32601, `Method not found: ${rpc.method}`);\r\n  }\r\n\r\n  const name = rpc.params?.name as string | undefined;\r\n  const args = rpc.params?.arguments ?? {};\r\n  if (!name) {\r\n    return rpcError(rpc.id ?? null, -32602, 'Invalid params: \"name\" required');\r\n  }\r\n\r\n  try {\r\n    switch (name) {\r\n      case 'get_product': {\r\n        const result = await toolGetProduct(env, args);\r\n        return rpcResult(rpc.id ?? null, result);\r\n      }\r\n      case 'search_products': {\r\n        const result = await toolSearchProducts(env, args);\r\n        return rpcResult(rpc.id ?? null, result);\r\n      }\r\n      default:\r\n        return rpcError(rpc.id ?? null, -32601, `Unknown tool: ${name}`);\r\n    }\r\n  } catch (err: any) {\r\n    console.error('MCP tool error:', err);\r\n    const message = err instanceof Error ? err.message : String(err);\r\n    return rpcError(rpc.id ?? null, -32000, 'Tool execution failed', { message });\r\n  }\r\n}\r\n\r\nexport async function handleMcpRequest(request: Request, env: Env): Promise<Response> {\r\n  const url = new URL(request.url);\r\n  const isAppProxy = url.pathname === '/apps/assistant/mcp';\r\n  if (request.method !== 'POST') {\r\n    return new Response('Method Not Allowed', { status: 405, headers: json() });\r\n  }\r\n\r\n  if (isAppProxy) {\r\n    if (!env.SHOPIFY_APP_SECRET) {\r\n      return new Response('Server misconfigured', { status: 500, headers: json() });\r\n    }\r\n    const valid = await verifyAppProxyHmac(request, env.SHOPIFY_APP_SECRET);\r\n    if (!valid) return new Response('Invalid signature', { status: 401, headers: json() });\r\n  }\r\n\r\n  return handleToolsCall(env, request);\r\n}", "/// <reference types=\"@cloudflare/workers-types\" />\r\nimport { verifyAppProxyHmac } from './auth';\r\nimport {\r\n  searchShopPoliciesAndFaqs,\r\n  searchShopPoliciesAndFaqsWithMCP,\r\n  searchProductCatalogWithMCP,\r\n  formatRagContextForPrompt,\r\n  type VectorizeIndex\r\n} from './rag';\r\nimport { streamGroqResponse, buildGroqMessages, getGroqResponse } from './groq';\r\nimport { handleMcpRequest } from './mcp_server';\r\n\r\ntype ChatRole = 'user' | 'assistant';\r\n\r\ninterface HistoryEntry {\r\n  role: ChatRole;\r\n  content: string;\r\n  ts: number;\r\n}\r\n\r\ninterface AppendPayload {\r\n  role: ChatRole;\r\n  content: string;\r\n  session_id?: string;\r\n}\r\n\r\ninterface ChatRequestBody {\r\n  message: string;\r\n  session_id?: string;\r\n  stream?: boolean;\r\n}\r\n\r\ninterface EndPayload {\r\n  session_id?: string;\r\n}\r\n\r\ninterface AiRunResult {\r\n  response?: string;\r\n}\r\n\r\ninterface WorkersAI {\r\n  run: (model: string, args: Record<string, unknown>) => Promise<AiRunResult>;\r\n}\r\n\r\nexport interface Env {\r\n  DB: D1Database;\r\n  SESSIONS_KV: KVNamespace;\r\n  SESSION_DO: DurableObjectNamespace;\r\n  VECTOR_INDEX?: VectorizeIndex;\r\n  SHOPIFY_APP_SECRET: string;\r\n  ALLOWED_ORIGIN?: string;\r\n  AI?: WorkersAI;\r\n  SHOPIFY_STOREFRONT_TOKEN?: string;\r\n  SHOPIFY_ADMIN_TOKEN?: string;\r\n  SHOP_DOMAIN?: string;\r\n  GROQ_API_KEY?: string;\r\n  DEV_BYPASS?: string; // '1' to bypass HMAC in dev\r\n}\r\n\r\nconst RATE_LIMIT_WINDOW_MS = 60_000;\r\nconst RATE_LIMIT_MAX_REQUESTS = 20;\r\nconst MODEL_NAME = '@cf/meta/llama-3.1-8b-instruct';\r\nconst MAX_HISTORY = 200;\r\n\r\nfunction now(): number {\r\n  return Date.now();\r\n}\r\n\r\nfunction isNonEmptyString(value: unknown): value is string {\r\n  return typeof value === 'string' && value.trim().length > 0;\r\n}\r\n\r\nfunction isChatRole(value: unknown): value is ChatRole {\r\n  return value === 'user' || value === 'assistant';\r\n}\r\n\r\nfunction parseAppendPayload(input: unknown): AppendPayload | null {\r\n  if (typeof input !== 'object' || input === null) return null;\r\n  const maybe = input as Record<string, unknown>;\r\n  if (!isChatRole(maybe.role) || !isNonEmptyString(maybe.content)) return null;\r\n  const sessionId = typeof maybe.session_id === 'string' && maybe.session_id.length > 0 ? maybe.session_id : undefined;\r\n  return { role: maybe.role, content: String(maybe.content), session_id: sessionId };\r\n}\r\n\r\nfunction parseChatRequestBody(input: unknown): ChatRequestBody | null {\r\n  if (typeof input !== 'object' || input === null) return null;\r\n  const maybe = input as Record<string, unknown>;\r\n  if (!isNonEmptyString(maybe.message)) return null;\r\n  const sessionId = typeof maybe.session_id === 'string' && maybe.session_id.length > 0 ? maybe.session_id : undefined;\r\n  const stream = typeof maybe.stream === 'boolean' ? maybe.stream : true;\r\n  return {\r\n    message: String(maybe.message),\r\n    session_id: sessionId,\r\n    stream,\r\n  };\r\n}\r\n\r\nfunction parseEndPayload(input: unknown): EndPayload | null {\r\n  if (typeof input !== 'object' || input === null) return null;\r\n  const maybe = input as Record<string, unknown>;\r\n  const sessionId = typeof maybe.session_id === 'string' && maybe.session_id.length > 0 ? maybe.session_id : undefined;\r\n  return { session_id: sessionId };\r\n}\r\n\r\nfunction ensureHistoryArray(input: unknown): HistoryEntry[] {\r\n  if (!Array.isArray(input)) return [];\r\n  const out: HistoryEntry[] = [];\r\n  for (const candidate of input) {\r\n    if (typeof candidate !== 'object' || candidate === null) continue;\r\n    const raw = candidate as Record<string, unknown>;\r\n    if (!isChatRole(raw.role) || !isNonEmptyString(raw.content)) continue;\r\n    const ts = typeof raw.ts === 'number' ? raw.ts : now();\r\n    out.push({ role: raw.role, content: String(raw.content), ts });\r\n  }\r\n  return out.slice(-MAX_HISTORY);\r\n}\r\n\r\nfunction cors(env: Env): Record<string, string> {\r\n  const origin = env.ALLOWED_ORIGIN || '*';\r\n  return {\r\n    'Access-Control-Allow-Origin': origin,\r\n    'Access-Control-Allow-Methods': 'GET,POST,OPTIONS',\r\n    'Access-Control-Allow-Headers': 'Content-Type,Authorization,X-Shop-Signature',\r\n  };\r\n}\r\n\r\nexport class SessionDO {\r\n  private readonly state: DurableObjectState;\r\n  private readonly env: Env;\r\n  private history: HistoryEntry[] = [];\r\n  private lastRequestTimestamp = 0;\r\n  private requestsInWindow = 0;\r\n\r\n  constructor(state: DurableObjectState, env: Env) {\r\n    this.state = state;\r\n    this.env = env;\r\n\r\n    this.state.blockConcurrencyWhile(async () => {\r\n      const rawHistory = await this.state.storage.get<unknown>('history');\r\n      this.history = ensureHistoryArray(rawHistory);\r\n    });\r\n  }\r\n\r\n  async fetch(request: Request): Promise<Response> {\r\n    if (!this.rateLimitOk()) {\r\n      return new Response('Rate limit exceeded', { status: 429 });\r\n    }\r\n\r\n    const url = new URL(request.url);\r\n    const pathname = url.pathname;\r\n    const method = request.method.toUpperCase();\r\n\r\n    if (method === 'GET' && pathname.endsWith('/history')) {\r\n      return new Response(JSON.stringify(this.history), {\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n    }\r\n\r\n    if (method === 'POST' && pathname.endsWith('/append')) {\r\n      const payload = parseAppendPayload(await request.json().catch(() => null));\r\n      if (!payload) {\r\n        return new Response('Bad Request', { status: 400 });\r\n      }\r\n      if (payload.session_id) {\r\n        await this.state.storage.put('session_id', payload.session_id);\r\n      }\r\n      await this.append(payload);\r\n      return new Response('ok');\r\n    }\r\n\r\n    if (method === 'POST' && pathname.endsWith('/end')) {\r\n      const payload = parseEndPayload(await request.json().catch(() => null));\r\n      const sessionId = payload?.session_id ?? 'unknown';\r\n      await this.end(sessionId);\r\n      return new Response('ended');\r\n    }\r\n\r\n    return new Response('Not Found', { status: 404 });\r\n  }\r\n\r\n  private rateLimitOk(): boolean {\r\n    const current = now();\r\n    if (current - this.lastRequestTimestamp > RATE_LIMIT_WINDOW_MS) {\r\n      this.requestsInWindow = 1;\r\n      this.lastRequestTimestamp = current;\r\n      return true;\r\n    }\r\n    this.requestsInWindow += 1;\r\n    return this.requestsInWindow <= RATE_LIMIT_MAX_REQUESTS;\r\n  }\r\n\r\n  private async append(payload: AppendPayload): Promise<void> {\r\n    this.history.push({ role: payload.role, content: payload.content, ts: now() });\r\n    this.history = this.history.slice(-MAX_HISTORY);\r\n    await this.state.storage.put('history', JSON.stringify(this.history));\r\n  }\r\n\r\n  private async end(sessionId: string): Promise<void> {\r\n    if (this.history.length === 0) {\r\n      await this.state.storage.delete('history');\r\n      await this.state.storage.delete('session_id');\r\n      return;\r\n    }\r\n\r\n    if (this.env.DB) {\r\n      const started = this.history[0]?.ts ?? now();\r\n      const ended = this.history[this.history.length - 1]?.ts ?? started;\r\n      await this.env.DB.prepare(\r\n        'INSERT INTO conversations (session_id, started_at, ended_at) VALUES (?1, ?2, ?3)'\r\n      ).bind(sessionId, started, ended).run();\r\n      const row = await this.env.DB.prepare('SELECT last_insert_rowid() AS id').first<{ id: number }>();\r\n      const conversationId = row?.id;\r\n      if (conversationId !== undefined) {\r\n        const stmt = this.env.DB.prepare(\r\n          'INSERT INTO messages (conversation_id, role, content, created_at) VALUES (?1, ?2, ?3, ?4)'\r\n        );\r\n        for (const entry of this.history) {\r\n          await stmt.bind(conversationId, entry.role, entry.content, entry.ts).run();\r\n        }\r\n      }\r\n    }\r\n\r\n    this.history = [];\r\n    await this.state.storage.delete('history');\r\n    await this.state.storage.delete('session_id');\r\n  }\r\n}\r\n\r\nasync function generateAIResponse(history: HistoryEntry[], userMessage: string, env: Env): Promise<string> {\r\n  const ai = env.AI;\r\n  if (!ai || typeof ai.run !== 'function') {\r\n    return `Echo: ${userMessage}`;\r\n  }\r\n\r\n  const recentHistory = history.slice(-10);\r\n  const messages = [\r\n    {\r\n      role: 'system',\r\n      content: 'Jeste\u015B pomocnym asystentem sklepu jubilerskiego EPIR. Odpowiadasz na pytania konkretnie i kulturalnie.',\r\n    },\r\n    ...recentHistory.map((entry) => ({ role: entry.role, content: entry.content })),\r\n    { role: 'user' as const, content: userMessage },\r\n  ];\r\n\r\n  const response = await ai.run(MODEL_NAME, {\r\n    messages,\r\n    max_tokens: 512,\r\n    temperature: 0.7,\r\n    top_p: 0.9,\r\n  }).catch((error: unknown) => {\r\n    console.error('AI error', error);\r\n    return null;\r\n  });\r\n\r\n  if (response && typeof response.response === 'string' && response.response.trim().length > 0) {\r\n    return response.response.trim();\r\n  }\r\n\r\n  return 'Przepraszam, nie uda\u0142o mi si\u0119 wygenerowa\u0107 odpowiedzi. Spr\u00F3buj ponownie.';\r\n}\r\n\r\n/**\r\n * If the configured env.AI supports streaming, try to obtain a ReadableStream<string>\r\n * that yields incremental text chunks. Return null if not available.\r\n */\r\nasync function generateAIResponseStream(history: HistoryEntry[], userMessage: string, env: Env): Promise<ReadableStream<string> | null> {\r\n  // Build messages same as non-streaming\r\n  const recentHistory = history.slice(-10);\r\n  const messages = [\r\n    {\r\n      role: 'system',\r\n      content: 'Jeste\u015B pomocnym asystentem sklepu jubilerskiego EPIR. Odpowiadasz na pytania konkretnie i kulturalnie.',\r\n    },\r\n    ...recentHistory.map((entry) => ({ role: entry.role, content: entry.content })),\r\n    { role: 'user' as const, content: userMessage },\r\n  ];\r\n\r\n  // Try common streaming entrypoints on env.AI\r\n  try {\r\n    const ai: any = env.AI as any;\r\n    if (!ai) return null;\r\n\r\n    // 1) Workers AI hypothetical stream method: ai.stream(model, args)\r\n    if (typeof ai.stream === 'function') {\r\n      return await ai.stream(MODEL_NAME, { messages, max_tokens: 512, temperature: 0.7, top_p: 0.9 });\r\n    }\r\n\r\n    // 2) Some bindings expose runStream\r\n    if (typeof ai.runStream === 'function') {\r\n      return await ai.runStream(MODEL_NAME, { messages, max_tokens: 512, temperature: 0.7, top_p: 0.9 });\r\n    }\r\n\r\n    // 3) Some SDKs return an object with a readable property from run()\r\n    if (typeof ai.run === 'function') {\r\n      const maybe = await ai.run(MODEL_NAME, { messages, max_tokens: 512, temperature: 0.7, top_p: 0.9 });\r\n      if (maybe && typeof maybe === 'object' && maybe.readable) return maybe.readable as ReadableStream<string>;\r\n    }\r\n  } catch (e) {\r\n    console.warn('AI streaming not available or failed to start', e);\r\n    return null;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nasync function handleChat(request: Request, env: Env): Promise<Response> {\r\n  const payload = parseChatRequestBody(await request.json().catch(() => null));\r\n  if (!payload) {\r\n    return new Response('Bad Request: message required', { status: 400, headers: cors(env) });\r\n  }\r\n\r\n  const sessionId = payload.session_id ?? crypto.randomUUID();\r\n  const doId = env.SESSION_DO.idFromName(sessionId);\r\n  const stub = env.SESSION_DO.get(doId);\r\n\r\n  const appendResponse = await stub.fetch('https://session/append', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ role: 'user', content: payload.message, session_id: sessionId }),\r\n  });\r\n  if (!appendResponse.ok) {\r\n    return new Response('Internal Error: session append failed', { status: 500, headers: cors(env) });\r\n  }\r\n\r\n  if (payload.stream) {\r\n    return streamAssistantResponse(sessionId, payload.message, stub, env);\r\n  }\r\n\r\n  // Non-streaming path with RAG + Groq support\r\n  const historyResp = await stub.fetch('https://session/history');\r\n  const historyData = await historyResp.json().catch(() => []);\r\n  const history = ensureHistoryArray(historyData);\r\n  \r\n  let reply: string;\r\n  \r\n  // Perform RAG search with MCP integration\r\n  let ragContext: string | undefined;\r\n  \r\n  // Check if it's a product query - use MCP catalog search\r\n  if (isProductQuery(payload.message) && env.SHOP_DOMAIN) {\r\n    const productContext = await searchProductCatalogWithMCP(\r\n      payload.message, \r\n      env.SHOP_DOMAIN,\r\n      env.SHOPIFY_ADMIN_TOKEN,\r\n      env.SHOPIFY_STOREFRONT_TOKEN\r\n    );\r\n    if (productContext) {\r\n      ragContext = productContext;\r\n    }\r\n  }\r\n  \r\n  // If not a product query or no product results, try FAQs/policies\r\n  if (!ragContext) {\r\n    if (env.SHOP_DOMAIN) {\r\n      // Use MCP with Vectorize fallback\r\n      const ragResult = await searchShopPoliciesAndFaqsWithMCP(\r\n        payload.message,\r\n        env.SHOP_DOMAIN,\r\n        env.VECTOR_INDEX,\r\n        env.AI,\r\n        3\r\n      );\r\n      if (ragResult.results.length > 0) {\r\n        ragContext = formatRagContextForPrompt(ragResult);\r\n      }\r\n    } else if (env.VECTOR_INDEX && env.AI) {\r\n      // Vectorize-only fallback\r\n      const ragResult = await searchShopPoliciesAndFaqs(\r\n        payload.message, \r\n        env.VECTOR_INDEX, \r\n        env.AI,\r\n        3\r\n      );\r\n      if (ragResult.results.length > 0) {\r\n        ragContext = formatRagContextForPrompt(ragResult);\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Use Groq if available, otherwise fallback to Workers AI\r\n  if (env.GROQ_API_KEY) {\r\n    const messages = buildGroqMessages(history, payload.message, ragContext);\r\n    reply = await getGroqResponse(messages, env.GROQ_API_KEY);\r\n  } else {\r\n    reply = await generateAIResponse(history, payload.message, env);\r\n  }\r\n\r\n  await stub.fetch('https://session/append', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ role: 'assistant', content: reply, session_id: sessionId }),\r\n  });\r\n\r\n  return new Response(JSON.stringify({ reply, session_id: sessionId }), {\r\n    headers: { ...cors(env), 'Content-Type': 'application/json' },\r\n  });\r\n}\r\n\r\nfunction streamAssistantResponse(\r\n  sessionId: string,\r\n  userMessage: string,\r\n  stub: DurableObjectStub,\r\n  env: Env,\r\n): Response {\r\n  const { readable, writable } = new TransformStream();\r\n  const writer = writable.getWriter();\r\n  const encoder = new TextEncoder();\r\n\r\n  (async () => {\r\n    try {\r\n      // 1. Fetch history\r\n      const historyResp = await stub.fetch('https://session/history');\r\n      const historyRaw = await historyResp.json().catch(() => []);\r\n      const history = ensureHistoryArray(historyRaw);\r\n\r\n      // 2. Perform RAG search with MCP integration\r\n      let ragContext: string | undefined;\r\n      \r\n      // Check if it's a product query - use MCP catalog search\r\n      if (isProductQuery(userMessage) && env.SHOP_DOMAIN) {\r\n        const productContext = await searchProductCatalogWithMCP(\r\n          userMessage, \r\n          env.SHOP_DOMAIN,\r\n          env.SHOPIFY_ADMIN_TOKEN,\r\n          env.SHOPIFY_STOREFRONT_TOKEN\r\n        );\r\n        if (productContext) {\r\n          ragContext = productContext;\r\n        }\r\n      }\r\n      \r\n      // If not a product query or no product results, try FAQs/policies\r\n      if (!ragContext) {\r\n        if (env.SHOP_DOMAIN) {\r\n          // Use MCP with Vectorize fallback\r\n          const ragResult = await searchShopPoliciesAndFaqsWithMCP(\r\n            userMessage,\r\n            env.SHOP_DOMAIN,\r\n            env.VECTOR_INDEX,\r\n            env.AI,\r\n            3\r\n          );\r\n          if (ragResult.results.length > 0) {\r\n            ragContext = formatRagContextForPrompt(ragResult);\r\n          }\r\n        } else if (env.VECTOR_INDEX && env.AI) {\r\n          // Vectorize-only fallback\r\n          const ragResult = await searchShopPoliciesAndFaqs(\r\n            userMessage, \r\n            env.VECTOR_INDEX, \r\n            env.AI,\r\n            3\r\n          );\r\n          if (ragResult.results.length > 0) {\r\n            ragContext = formatRagContextForPrompt(ragResult);\r\n          }\r\n        }\r\n      }\r\n\r\n      let fullReply = '';\r\n      \r\n      // Send initial session_id event\r\n      await writer.write(encoder.encode(`data: ${JSON.stringify({ session_id: sessionId, done: false })}\\n\\n`));\r\n\r\n      // 3. Stream from Groq (if API key available) or fallback to Workers AI\r\n      if (env.GROQ_API_KEY) {\r\n        // Build messages with luxury prompt and RAG context\r\n        const messages = buildGroqMessages(history, userMessage, ragContext);\r\n        \r\n        // Use Groq streaming\r\n        const stream = await streamGroqResponse(messages, env.GROQ_API_KEY);\r\n        const reader = stream.getReader();\r\n        const decoder = new TextDecoder();\r\n        \r\n        while (true) {\r\n          const { done, value } = await reader.read();\r\n          if (done) break;\r\n          \r\n          const chunk = typeof value === 'string' ? value : decoder.decode(value as any);\r\n          fullReply += chunk;\r\n          \r\n          const evt = JSON.stringify({ delta: chunk, session_id: sessionId, done: false });\r\n          await writer.write(encoder.encode(`data: ${evt}\\n\\n`));\r\n        }\r\n      } else {\r\n        // Fallback: Try Workers AI streaming, else generate full reply\r\n        const stream = await generateAIResponseStream(history, userMessage, env);\r\n        \r\n        if (stream) {\r\n          // Real streaming from Workers AI\r\n          const reader = stream.getReader();\r\n          const decoder = new TextDecoder();\r\n          while (true) {\r\n            const { done, value } = await reader.read();\r\n            if (done) break;\r\n            const chunkStr = typeof value === 'string' ? value : decoder.decode(value as any);\r\n            fullReply += chunkStr;\r\n            const evt = JSON.stringify({ delta: chunkStr, session_id: sessionId, done: false });\r\n            await writer.write(encoder.encode(`data: ${evt}\\n\\n`));\r\n          }\r\n        } else {\r\n          // Full reply fallback with split for UX\r\n          fullReply = await generateAIResponse(history, userMessage, env);\r\n          const parts = fullReply.split(/(\\s+)/);\r\n          for (const part of parts) {\r\n            const evt = JSON.stringify({ delta: part, session_id: sessionId, done: false });\r\n            await writer.write(encoder.encode(`data: ${evt}\\n\\n`));\r\n            await new Promise((resolve) => setTimeout(resolve, 30));\r\n          }\r\n        }\r\n      }\r\n\r\n      // 4. Append final reply to session\r\n      await stub.fetch('https://session/append', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ role: 'assistant', content: fullReply, session_id: sessionId }),\r\n      });\r\n\r\n      // 5. Send done event\r\n      await writer.write(\r\n        encoder.encode(`data: ${JSON.stringify({ content: fullReply, session_id: sessionId, done: true })}\\n\\n`)\r\n      );\r\n      await writer.write(encoder.encode('data: [DONE]\\n\\n'));\r\n    } catch (error) {\r\n      console.error('Streaming error', error);\r\n      const message = error instanceof Error ? error.message : 'Unknown error';\r\n      await writer.write(encoder.encode(`data: ${JSON.stringify({ error: message, session_id: sessionId })}\\n\\n`));\r\n    } finally {\r\n      await writer.close();\r\n    }\r\n  })();\r\n\r\n  return new Response(readable, {\r\n    headers: {\r\n      ...cors(env),\r\n      'Content-Type': 'text/event-stream',\r\n      'Cache-Control': 'no-cache',\r\n      Connection: 'keep-alive',\r\n      'X-Accel-Buffering': 'no',\r\n    },\r\n  });\r\n}\r\n\r\nexport default {\r\n  async fetch(request: Request, env: Env): Promise<Response> {\r\n    if (request.method === 'OPTIONS') {\r\n      return new Response(null, { headers: cors(env) });\r\n    }\r\n\r\n    const url = new URL(request.url);\r\n\r\n    // Healthchecks\r\n    if (request.method === 'GET' && (url.pathname === '/' || url.pathname === '/ping' || url.pathname === '/health')) {\r\n      return new Response('ok', { status: 200, headers: cors(env) });\r\n    }\r\n\r\n    // [NOWE] Globalny stra\u017Cnik HMAC dla App Proxy: wszystkie POST-y pod /apps/assistant/*\r\n    if (url.pathname.startsWith('/apps/assistant/') && request.method === 'POST') {\r\n      if (!env.SHOPIFY_APP_SECRET) {\r\n        return new Response('Server misconfigured', { status: 500, headers: cors(env) });\r\n      }\r\n      const ok = await verifyAppProxyHmac(request, env);\r\n      if (!ok) {\r\n        return new Response('Unauthorized: Invalid HMAC signature', { status: 401, headers: cors(env) });\r\n      }\r\n    }\r\n\r\n    // [ZABEZPIECZONY] Chat przez App Proxy\r\n    if (url.pathname === '/apps/assistant/chat' && request.method === 'POST') {\r\n      return handleChat(request, env);\r\n    }\r\n\r\n    // (opcjonalnie) lokalny endpoint bez App Proxy, np. do test\u00F3w\r\n    if (url.pathname === '/chat' && request.method === 'POST') {\r\n      return handleChat(request, env);\r\n    }\r\n\r\n    // MCP server (JSON-RPC 2.0) \u2013 narz\u0119dzia Shopify\r\n    if (request.method === 'POST' && (url.pathname === '/mcp/tools/call' || url.pathname === '/apps/assistant/mcp')) {\r\n      return handleMcpRequest(request, env);\r\n    }\r\n\r\n    return new Response('Not Found', { status: 404, headers: cors(env) });\r\n  },\r\n};\r\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\user\\\\epir_asystent\\\\EPIR-ART-JEWELLERY\\\\WORKER\\\\src\\\\index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\user\\\\epir_asystent\\\\EPIR-ART-JEWELLERY\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\user\\\\epir_asystent\\\\EPIR-ART-JEWELLERY\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\user\\\\epir_asystent\\\\EPIR-ART-JEWELLERY\\\\WORKER\\\\src\\\\index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\user\\\\epir_asystent\\\\EPIR-ART-JEWELLERY\\\\WORKER\\\\.wrangler\\\\tmp\\\\bundle-mRhDL5\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\user\\\\epir_asystent\\\\EPIR-ART-JEWELLERY\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\user\\\\epir_asystent\\\\EPIR-ART-JEWELLERY\\\\WORKER\\\\.wrangler\\\\tmp\\\\bundle-mRhDL5\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\user\\\\epir_asystent\\\\EPIR-ART-JEWELLERY\\\\WORKER\\\\.wrangler\\\\tmp\\\\bundle-mRhDL5\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["key", "json"]
}
